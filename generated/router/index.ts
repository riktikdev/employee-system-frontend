/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../../src/routes/__root'
import { Route as LayoutRouteImport } from './../../src/routes/_layout'
import { Route as LayoutIndexRouteImport } from './../../src/routes/_layout/index'
import { Route as LayoutUsersIndexRouteImport } from './../../src/routes/_layout/users/index'
import { Route as LayoutSecretIndexRouteImport } from './../../src/routes/_layout/secret/index'
import { Route as LayoutAuthLoginRouteImport } from './../../src/routes/_layout/auth/login'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutUsersIndexRoute = LayoutUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSecretIndexRoute = LayoutSecretIndexRouteImport.update({
  id: '/secret/',
  path: '/secret/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAuthLoginRoute = LayoutAuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/auth/login': typeof LayoutAuthLoginRoute
  '/secret': typeof LayoutSecretIndexRoute
  '/users': typeof LayoutUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/auth/login': typeof LayoutAuthLoginRoute
  '/secret': typeof LayoutSecretIndexRoute
  '/users': typeof LayoutUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/auth/login': typeof LayoutAuthLoginRoute
  '/_layout/secret/': typeof LayoutSecretIndexRoute
  '/_layout/users/': typeof LayoutUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/auth/login' | '/secret' | '/users'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/login' | '/secret' | '/users'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/'
    | '/_layout/auth/login'
    | '/_layout/secret/'
    | '/_layout/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/users/': {
      id: '/_layout/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof LayoutUsersIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/secret/': {
      id: '/_layout/secret/'
      path: '/secret'
      fullPath: '/secret'
      preLoaderRoute: typeof LayoutSecretIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/auth/login': {
      id: '/_layout/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof LayoutAuthLoginRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutAuthLoginRoute: typeof LayoutAuthLoginRoute
  LayoutSecretIndexRoute: typeof LayoutSecretIndexRoute
  LayoutUsersIndexRoute: typeof LayoutUsersIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutAuthLoginRoute: LayoutAuthLoginRoute,
  LayoutSecretIndexRoute: LayoutSecretIndexRoute,
  LayoutUsersIndexRoute: LayoutUsersIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
